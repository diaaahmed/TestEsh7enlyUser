plugins {
    id 'com.android.application'
    alias libs.plugins.kotlinAndroid
    id "dagger.hilt.android.plugin"
    id 'com.google.gms.google-services'
    id("com.google.firebase.crashlytics")
}

apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'kotlin-kapt'

android {
    namespace 'com.esh7enly.esh7enlyuser'
    compileSdk libs.versions.targetSdk.get().toInteger()

    defaultConfig {
        applicationId "com.esh7enly.esh7enlyuser"
        minSdk libs.versions.minSdk.get().toInteger()
        targetSdk libs.versions.targetSdk.get().toInteger()

        versionCode 19
        versionName "1.18"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "IMAGE_URL", IMAGE_URL)
        buildConfigField("String", "BASE_URL", BASE_URL)
        buildConfigField("String", "SECRET_KEY", SECRET_KEY)
        buildConfigField("String", "SECRET_WORD", SECRET_WORD)
        buildConfigField("String", "BASE_URL_NOTIFICATION", BASE_URL_NOTIFICATION)
        buildConfigField("String", "PRIVACY_POLICY", PRIVACY_POLICY)
        buildConfigField("String", "SERVER_KEY_PRODUCTION", SERVER_KEY_PRODUCTION)
        buildConfigField("String", "SERVER_KEY_TEST", SERVER_KEY_TEST)
        buildConfigField("String", "CLIENT_KEY_PRODUCTION", CLIENT_KEY_PRODUCTION)
        buildConfigField("String", "CLIENT_KEY_TEST", CLIENT_KEY_TEST)
        buildConfigField("String", "PROFILE_ID_TEST", PROFILE_ID_TEST)
        buildConfigField("String", "PROFILE_ID_PRODUCTION", PROFILE_ID_PRODUCTION)
        buildConfigField("String", "ESH7ENLY_EMAIL", ESH7ENLY_EMAIL)
        buildConfigField("String", "XPAY_API_KEY_PRODUCTION", XPAY_API_KEY_PRODUCTION)
        buildConfigField("String", "XPAY_COMMUNITY_ID_PRODUCTION", XPAY_COMMUNITY_ID_PRODUCTION)
        buildConfigField("String", "XPAY_API_PAYMENT_ID_PRODUCTION", XPAY_API_PAYMENT_ID_PRODUCTION)


        signingConfig signingConfigs.debug

        kapt{
            arguments{
                arg("room.schemaLocation","$projectDir/schemas")
            }
        }

    }


    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding = true
        viewBinding true
    }
}

dependencies {

    implementation libs.ktx
    implementation libs.appCompat
    implementation libs.material
    implementation libs.androidx.constraintlayout
    implementation(platform(libs.firebase.bom))
    implementation libs.firebase.messaging
    implementation(libs.firebase.crashlytics)
    implementation libs.firebase.dynamic.links


    testImplementation libs.junit

    androidTestImplementation libs.espresso

    implementation libs.lifecycle.livedata.ktx
    implementation libs.androidx.lifecycle.lifecycle.viewmodel.ktx

    // Navigation component
    implementation libs.androidx.navigation.fragment.ktx
    implementation libs.androidx.navigation.ui.ktx

    // Modules
    implementation project(path: ':data')
    implementation project(path: ':domain')

    // Hilt
    kapt libs.androidx.hilt.compiler
    implementation libs.hiltandroid
    kapt libs.hiltcompiler

    // For hilt with viewmodel
    implementation libs.androidx.activity.ktx

    // Retrofit
    implementation libs.retrofit
    implementation libs.convertergson
    implementation(libs.retrofit2.kotlinx.serialization.converter)

    // Logging interceptor
    implementation libs.logging.interceptor

    // Chucker
    debugImplementation libs.chucker
    releaseImplementation libs.library.no.op

    // ViewModel
    implementation libs.lifecycle.livedata.ktx
    implementation libs.androidx.lifecycle.lifecycle.viewmodel.ktx
    implementation libs.androidx.lifecycle.runtime.ktx

    implementation libs.recyclerview

    // Glide
    implementation libs.glide

    // Room database
    // Room components
    implementation libs.roomruntime
    kapt libs.roomcomplier
    implementation libs.roomktx
    implementation libs.roomrxjava

    // Sdp library
    implementation libs.sdp.android
    implementation libs.ssp.android

    // Leak canary
    // debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.10'

    // Splash screen api
    implementation libs.androidx.core.splashscreen


    // NFC fawry
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation files('libs/FawryNFC_1.4.0_27082023_release.aar')

    // Lottie
    implementation libs.lottie

    implementation libs.shimmer

    // Splash screen api
    implementation libs.androidx.core.splashscreen

    // Paytabs
    implementation (libs.payment.sdk)
            {
                exclude group: "com.paytabs", module: "scan-card"
            }

    // In app update
    implementation libs.app.update

    implementation libs.app.update.ktx

    // Google play api review
    implementation libs.review

    // For Kotlin users also add the Kotlin extensions library for Play In-App Review:
    implementation libs.review.ktx

}
